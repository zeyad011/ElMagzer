// <auto-generated />
using System;
using ElMagzer.Repository.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ElMagzer.Repository.Data.Migrations
{
    [DbContext(typeof(ElMagzerContext))]
    [Migration("20250209063308_Edite")]
    partial class Edite
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ElMagzer.Core.Models.Batch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BatchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BatchType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CowOrPiecesType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("numberOfCowOrPieces")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Batches");
                });

            modelBuilder.Entity("ElMagzer.Core.Models.Clients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameENG")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "1",
                            Name = "Ahmed"
                        },
                        new
                        {
                            Id = 2,
                            Code = "2",
                            Name = "Ziad"
                        },
                        new
                        {
                            Id = 3,
                            Code = "3",
                            Name = "Rizk"
                        });
                });

            modelBuilder.Entity("ElMagzer.Core.Models.CowMiscarriage", b =>
                {
                    b.Property<int>("CowsId")
                        .HasColumnType("int");

                    b.Property<int>("MiscarriageTypeId")
                        .HasColumnType("int");

                    b.Property<string>("BarCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("CowsId", "MiscarriageTypeId");

                    b.HasIndex("MiscarriageTypeId");

                    b.ToTable("cowMiscarriages");
                });

            modelBuilder.Entity("ElMagzer.Core.Models.Cow_Pieces_2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BatchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Create_At_Divece4")
                        .HasColumnType("datetime2");

                    b.Property<int>("CuttingId")
                        .HasColumnType("int");

                    b.Property<string>("PieceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.Property<DateTime>("dateOfExpiere")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isExecutions")
                        .HasColumnType("bit");

                    b.Property<int>("machien_Id_Device4")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("techofDevice4")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BatchId");

                    b.HasIndex("CuttingId");

                    b.HasIndex("StoreId");

                    b.ToTable("Cow_Pieces_2");
                });

            modelBuilder.Entity("ElMagzer.Core.Models.Cows", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BatchId")
                        .HasColumnType("int");

                    b.Property<double?>("Cow_Weight")
                        .HasColumnType("float");

                    b.Property<string>("CowsId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CowsSeedId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Create_At_Divece1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Create_At_Divece5")
                        .HasColumnType("datetime2");

                    b.Property<string>("Doctor_Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Miscarage")
                        .HasColumnType("float");

                    b.Property<int>("TypeofCowsId")
                        .HasColumnType("int");

                    b.Property<double?>("Waste")
                        .HasColumnType("float");

                    b.Property<int>("machien_Id_Device1")
                        .HasColumnType("int");

                    b.Property<int?>("machien_Id_Device5")
                        .HasColumnType("int");

                    b.Property<string>("techOfDevice1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("techfDevice5")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BatchId");

                    b.HasIndex("CowsSeedId");

                    b.HasIndex("TypeofCowsId");

                    b.ToTable("Cows");
                });

            modelBuilder.Entity("ElMagzer.Core.Models.CowsPieces", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BatchId")
                        .HasColumnType("int");

                    b.Property<int>("CowId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Create_At_Divece2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Create_At_Divece3")
                        .HasColumnType("datetime2");

                    b.Property<string>("PieceTybe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StoreId")
                        .HasColumnType("int");

                    b.Property<int?>("Tybe")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateOfExpiere")
                        .HasColumnType("datetime2");

                    b.Property<bool>("isExecutions")
                        .HasColumnType("bit");

                    b.Property<int>("machien_Id_Device2")
                        .HasColumnType("int");

                    b.Property<int?>("machien_Id_Device3")
                        .HasColumnType("int");

                    b.Property<string>("pieceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("pieceWeight_In")
                        .HasColumnType("float");

                    b.Property<double?>("pieceWeight_Out")
                        .HasColumnType("float");

                    b.Property<string>("techOfDevice2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("techOfDevice3")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BatchId");

                    b.HasIndex("CowId");

                    b.HasIndex("StoreId");

                    b.ToTable("CowsPieces");
                });

            modelBuilder.Entity("ElMagzer.Core.Models.CowsSeed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BatchId")
                        .HasColumnType("int");

                    b.Property<string>("CowsId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPrinted")
                        .HasColumnType("bit");

                    b.Property<int>("TypeofCowsId")
                        .HasColumnType("int");

                    b.Property<int>("clientId")
                        .HasColumnType("int");

                    b.Property<int>("suppliersId")
                        .HasColumnType("int");

                    b.Property<double>("weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BatchId");

                    b.HasIndex("TypeofCowsId");

                    b.HasIndex("clientId");

                    b.HasIndex("suppliersId");

                    b.ToTable("cowsSeeds");
                });

            modelBuilder.Entity("ElMagzer.Core.Models.Cutting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CutName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("cuttings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "1",
                            CutName = "Ribeye",
                            Date = new DateTime(2024, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Code = "2",
                            CutName = "Tenderloin",
                            Date = new DateTime(2024, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Code = "3",
                            CutName = "Sirloin",
                            Date = new DateTime(2024, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Code = "4",
                            CutName = "T-Bone",
                            Date = new DateTime(2024, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Code = "5",
                            CutName = "Chuck",
                            Date = new DateTime(2024, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Code = "6",
                            CutName = "Flank",
                            Date = new DateTime(2024, 12, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Code = "7",
                            CutName = "Brisket",
                            Date = new DateTime(2024, 12, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            Code = "8",
                            CutName = "Shank",
                            Date = new DateTime(2024, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            Code = "9",
                            CutName = "Rump",
                            Date = new DateTime(2024, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            Code = "10",
                            CutName = "Short Loin",
                            Date = new DateTime(2024, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            Code = "11",
                            CutName = "Top Sirloin",
                            Date = new DateTime(2024, 12, 11, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            Code = "12",
                            CutName = "Bottom Sirloin",
                            Date = new DateTime(2024, 12, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            Code = "13",
                            CutName = "Plate",
                            Date = new DateTime(2024, 12, 13, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ElMagzer.Core.Models.MiscarriageType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("miscarriageTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "1",
                            Name = "ممبار"
                        },
                        new
                        {
                            Id = 2,
                            Code = "2",
                            Name = "فشه"
                        },
                        new
                        {
                            Id = 3,
                            Code = "3",
                            Name = "كرشه"
                        },
                        new
                        {
                            Id = 4,
                            Code = "4",
                            Name = "طحال"
                        },
                        new
                        {
                            Id = 5,
                            Code = "5",
                            Name = "بنكرياس"
                        },
                        new
                        {
                            Id = 6,
                            Code = "6",
                            Name = "كبده"
                        },
                        new
                        {
                            Id = 7,
                            Code = "7",
                            Name = "مخ"
                        },
                        new
                        {
                            Id = 8,
                            Code = "8",
                            Name = "قلب"
                        });
                });

            modelBuilder.Entity("ElMagzer.Core.Models.Orders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Approve")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ClientsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrederType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Performance")
                        .HasColumnType("float");

                    b.Property<int?>("numberofCows")
                        .HasColumnType("int");

                    b.Property<int?>("numberofbatches")
                        .HasColumnType("int");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientsId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ElMagzer.Core.Models.Stores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HeightCapacity")
                        .HasColumnType("int");

                    b.Property<int?>("quantity")
                        .HasColumnType("int");

                    b.Property<string>("storeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "1",
                            HeightCapacity = 300,
                            storeName = "مخزن 1"
                        },
                        new
                        {
                            Id = 2,
                            Code = "2",
                            HeightCapacity = 200,
                            storeName = "مخزن 2"
                        },
                        new
                        {
                            Id = 3,
                            Code = "3",
                            HeightCapacity = 400,
                            storeName = "مخزن 3"
                        },
                        new
                        {
                            Id = 4,
                            Code = "4",
                            HeightCapacity = 430,
                            storeName = "مخزن 4"
                        },
                        new
                        {
                            Id = 5,
                            Code = "5",
                            HeightCapacity = 120,
                            storeName = "مخزن 5"
                        },
                        new
                        {
                            Id = 6,
                            Code = "6",
                            HeightCapacity = 140,
                            storeName = "مخزن 6"
                        },
                        new
                        {
                            Id = 7,
                            Code = "7",
                            HeightCapacity = 500,
                            storeName = "مخزن 7"
                        },
                        new
                        {
                            Id = 8,
                            Code = "8",
                            HeightCapacity = 320,
                            storeName = "مخزن 8"
                        },
                        new
                        {
                            Id = 9,
                            Code = "9",
                            HeightCapacity = 250,
                            storeName = "مخزن 9"
                        });
                });

            modelBuilder.Entity("ElMagzer.Core.Models.Suppliers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameENG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("suppliers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "1",
                            SupplierName = "ElRawda"
                        },
                        new
                        {
                            Id = 2,
                            Code = "2",
                            SupplierName = "ElMagzer"
                        },
                        new
                        {
                            Id = 3,
                            Code = "3",
                            SupplierName = "Shatat"
                        });
                });

            modelBuilder.Entity("ElMagzer.Core.Models.TypeofCows", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeNameENG")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeofCows");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TypeName = "بلدي"
                        },
                        new
                        {
                            Id = 2,
                            TypeName = "برازيلي"
                        },
                        new
                        {
                            Id = 3,
                            TypeName = "هولندي"
                        },
                        new
                        {
                            Id = 4,
                            TypeName = "انجليزي"
                        },
                        new
                        {
                            Id = 5,
                            TypeName = "سويسري"
                        },
                        new
                        {
                            Id = 6,
                            TypeName = "هندي"
                        });
                });

            modelBuilder.Entity("ElMagzer.Core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ElMagzer.Core.Models.Batch", b =>
                {
                    b.HasOne("ElMagzer.Core.Models.Orders", "Order")
                        .WithMany("Batches")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ElMagzer.Core.Models.CowMiscarriage", b =>
                {
                    b.HasOne("ElMagzer.Core.Models.Cows", "Cow")
                        .WithMany("CowMiscarriages")
                        .HasForeignKey("CowsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElMagzer.Core.Models.MiscarriageType", "MiscarriageType")
                        .WithMany("CowMiscarriages")
                        .HasForeignKey("MiscarriageTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cow");

                    b.Navigation("MiscarriageType");
                });

            modelBuilder.Entity("ElMagzer.Core.Models.Cow_Pieces_2", b =>
                {
                    b.HasOne("ElMagzer.Core.Models.Batch", "Batch")
                        .WithMany("CowPieces2")
                        .HasForeignKey("BatchId");

                    b.HasOne("ElMagzer.Core.Models.Cutting", "Cutting")
                        .WithMany()
                        .HasForeignKey("CuttingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElMagzer.Core.Models.Stores", "Store")
                        .WithMany("CowPieces2")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Batch");

                    b.Navigation("Cutting");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("ElMagzer.Core.Models.Cows", b =>
                {
                    b.HasOne("ElMagzer.Core.Models.Batch", "Batch")
                        .WithMany("Cows")
                        .HasForeignKey("BatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElMagzer.Core.Models.CowsSeed", "CowsSeed")
                        .WithMany()
                        .HasForeignKey("CowsSeedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElMagzer.Core.Models.TypeofCows", "TypeofCows")
                        .WithMany()
                        .HasForeignKey("TypeofCowsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Batch");

                    b.Navigation("CowsSeed");

                    b.Navigation("TypeofCows");
                });

            modelBuilder.Entity("ElMagzer.Core.Models.CowsPieces", b =>
                {
                    b.HasOne("ElMagzer.Core.Models.Batch", "Batch")
                        .WithMany("CowsPieces")
                        .HasForeignKey("BatchId");

                    b.HasOne("ElMagzer.Core.Models.Cows", "Cow")
                        .WithMany()
                        .HasForeignKey("CowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElMagzer.Core.Models.Stores", "Store")
                        .WithMany("CowsPieces")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Batch");

                    b.Navigation("Cow");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("ElMagzer.Core.Models.CowsSeed", b =>
                {
                    b.HasOne("ElMagzer.Core.Models.Batch", "Batch")
                        .WithMany("CowsSeed")
                        .HasForeignKey("BatchId");

                    b.HasOne("ElMagzer.Core.Models.TypeofCows", "TypeofCows")
                        .WithMany()
                        .HasForeignKey("TypeofCowsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElMagzer.Core.Models.Clients", "client")
                        .WithMany()
                        .HasForeignKey("clientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElMagzer.Core.Models.Suppliers", "suppliers")
                        .WithMany()
                        .HasForeignKey("suppliersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Batch");

                    b.Navigation("TypeofCows");

                    b.Navigation("client");

                    b.Navigation("suppliers");
                });

            modelBuilder.Entity("ElMagzer.Core.Models.Orders", b =>
                {
                    b.HasOne("ElMagzer.Core.Models.Clients", "Clients")
                        .WithMany("Orders")
                        .HasForeignKey("ClientsId");

                    b.Navigation("Clients");
                });

            modelBuilder.Entity("ElMagzer.Core.Models.Batch", b =>
                {
                    b.Navigation("CowPieces2");

                    b.Navigation("Cows");

                    b.Navigation("CowsPieces");

                    b.Navigation("CowsSeed");
                });

            modelBuilder.Entity("ElMagzer.Core.Models.Clients", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ElMagzer.Core.Models.Cows", b =>
                {
                    b.Navigation("CowMiscarriages");
                });

            modelBuilder.Entity("ElMagzer.Core.Models.MiscarriageType", b =>
                {
                    b.Navigation("CowMiscarriages");
                });

            modelBuilder.Entity("ElMagzer.Core.Models.Orders", b =>
                {
                    b.Navigation("Batches");
                });

            modelBuilder.Entity("ElMagzer.Core.Models.Stores", b =>
                {
                    b.Navigation("CowPieces2");

                    b.Navigation("CowsPieces");
                });
#pragma warning restore 612, 618
        }
    }
}
